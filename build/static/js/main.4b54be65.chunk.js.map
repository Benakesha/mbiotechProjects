{"version":3,"sources":["axiosInterceptor.js","stores/actions/loginAction.js","stores/actions/actionTypes.js","components/loginComponent/loginComponent.js","components/navigationComponent/navigationComponent.js","components/footerComponent/footerComponent.js","components/dashboardComponent/dashboardComponent.js","components/reportComponent/reportComponent.js","components/adduserComponent/adduserComponent.js","components/usersComponent/usersComponent.js","components/siteDetails/siteDetailsComponent.js","App.js","serviceWorker.js","stores/updateObject.js","stores/reducers/loginReducer.js","index.js"],"names":["axiosInterceptor","axios","create","baseURL","defaults","headers","common","interceptors","request","use","error","response","loginSuccess","token","username","role","type","loginFailure","logout","localStorage","clear","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","loginAction","userdata","console","log","post","then","data","success","expirationDate","Date","getTime","expiresIn","setItem","message","catch","formValid","Layout","Header","Content","formErrors","rest","valid","Object","values","forEach","val","length","emailRegx","loginComponent","state","email","password","touched","formError","onInputChange","e","preventDefault","target","name","value","test","setState","onButtonClickHandler","loginSubmitHandler","userData","props","onAuth","this","isAuthenticated","onSetAuthRedirectPath","history","push","xs","span","offset","sm","md","className","onSubmit","isError","style","color","textAlign","Item","hasFeedback","validateStatus","help","placeholder","prefix","onChange","event","required","onClick","htmlType","block","backgroundColor","fontSize","marginLeft","Component","connect","auth","isLoading","loading","authRedirectPath","action","navigationComponent","onLogoutHandler","onLogout","collapse","bind","match","dark","expand","scrolling","fixed","href","isOpen","navbar","left","active","to","icon","right","nav","caret","React","withRouter","Footer","footerComponent","width","Option","Select","formValid1","nameRegx","dashboardComponent","_isMounted","phoneNo","address","pincode","ctrname","ctrno","elname","elno","carpname","carpno","pantrname","pantrno","plumname","plumno","intname","intno","fabrname","fabrino","checked","contractor","electritian","carpenter","painter","plumber","interior","fabricator","trim","validator","isInt","onvisitorButtonClickHandler","selectChangeHandle","addvisitorSubmitHandler","escape","cname","cphone","executiveName","getItem","status","notification","open","duration","top","onCheckboxChange2","onCheckboxChange1","onCheckboxChange3","onCheckboxChange4","onCheckboxChange5","onCheckboxChange6","onCheckboxChange7","onInputChange1","paddingBottom","TextArea","faMapPin","showArrow","mode","key","disabled","reportComponent","selectedRows","tableData","onExportReport","get","responseType","res","saveAs","deleteRow","text","tableId","_id","put","id","err","columns","title","dataIndex","render","record","height","ghost","marginTop","float","borderColor","marginRight","scroll","x","y","rowKey","dataSource","pagination","bordered","passwordReg","adduserComponent","adduserSubmitHandler","defaultValue","usersComponent","userId","RangePicker","DatePicker","dateFormatList","siteDetailsComponent","filterData","fromDate","toDate","onSelectChange","onDateChange","date","dateString","onFilterTable","map","user","format","App","onTryAutoSignUp","exact","component","Boolean","window","location","hostname","updateObject","oldObject","newObject","initialState","loginRequest","loginReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b54be65.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst axiosInterceptor = axios.create({\n  baseURL: \"http://ec2-13-58-162-228.us-east-2.compute.amazonaws.com/api/v1\"\n});\n\naxiosInterceptor.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n\naxiosInterceptor.interceptors.request.use(\n  request => {\n    return request;\n  },\n  error => {\n    return error;\n  }\n);\n\naxiosInterceptor.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return error;\n  }\n);\n\nexport default axiosInterceptor;\n","import axios from \"../../axiosInterceptor\";\n// import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const loginRequest = () => {\n  return {\n    type: actionTypes.LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = (token, username, role) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    username: username,\n    role: role\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: actionTypes.LOGIN_FAILURE,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.clear();\n  return {\n    type: actionTypes.LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const loginAction = userdata => {\n  return dispatch => {\n    dispatch(loginRequest());\n    console.log(\"userdata----\", userdata);\n    axios\n      .post(\"/login\", userdata)\n      .then(response => {\n        console.log(\"response-----\", response);\n        if (response.data.success) {\n          const expirationDate = new Date(\n            new Date().getTime() + response.data.expiresIn * 1000\n          );\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"expirationDate\", expirationDate);\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"role\", response.data.role);\n          dispatch(\n            loginSuccess(\n              response.data.token,\n              response.data.username,\n              response.data.role\n            )\n          );\n          dispatch(checkAuthTimeout(response.data.expiresIn));\n        } else {\n          dispatch(loginFailure(response.data.message));\n        }\n      })\n      .catch(error => {\n        dispatch(loginFailure(error));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const username = localStorage.getItem(\"username\");\n        const role = localStorage.getItem(\"role\");\n        dispatch(loginSuccess(token, username, role));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Input,\n  Button,\n  Icon,\n  Form,\n  notification,\n  Checkbox\n} from \"antd\";\nimport \"./loginComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\n\nconst { Header, Content } = Layout;\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\nclass loginComponent extends Component {\n  state = {\n    email: null,\n    password: null,\n    touched: {\n      email: false,\n      password: false\n    },\n    formError: { email: \"\", password: \"\" }\n  };\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 && value.length > 0\n            ? \"Min 6 character required\"\n            : \"\";\n\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n\n  onButtonClickHandler = e => {\n    let { email, password, formError } = this.state;\n    if (email === null && password === null) {\n      formError.email = \"Email field required\";\n      formError.password = \"Password field required\";\n    }\n    this.setState({ formError });\n  };\n  loginSubmitHandler = e => {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.onAuth(userData);\n    }\n  };\n\n  render() {\n    let { formError } = this.state;\n    let authRedirect = null;\n\n    if (this.props.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    return (\n      <Row>\n        {/* {authRedirect} */}\n        <Col\n          xs={{ span: 18, offset: 3 }}\n          sm={{ span: 12, offset: 7 }}\n          md={{ span: 10, offset: 7 }}\n          //   className=\"card\"\n        >\n          <form className=\"form\" onSubmit={this.loginSubmitHandler}>\n            <h3 className=\"h3\">Login to MbioTech </h3>\n            {this.props.isError ? (\n              <p style={{ color: \"red\", textAlign: \"center\" }}>\n                {this.props.isError}\n              </p>\n            ) : null}\n            <Form.Item\n              className=\"formElement\"\n              hasFeedback\n              validateStatus={formError.email.length > 0 ? \"error\" : \"\"}\n              help={formError.email}\n            >\n              <Input\n                placeholder=\"email\"\n                name=\"email\"\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                onChange={event => this.onInputChange(event)}\n              />\n            </Form.Item>\n            <Form.Item\n              className=\"formElement\"\n              hasFeedback\n              validateStatus={formError.password.length > 0 ? \"error\" : \"\"}\n              help={formError.password}\n            >\n              <Input\n                required\n                placeholder=\"password\"\n                name=\"password\"\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                onChange={event => this.onInputChange(event)}\n              />\n            </Form.Item>\n            <Form.Item className=\"formElement\">\n              <Button\n                onClick={this.onButtonClickHandler}\n                htmlType=\"submit\"\n                block\n                style={{\n                  backgroundColor: \"#2BBBAD\",\n                  color: \"#FFF\",\n                  fontSize: \"18px\"\n                }}\n              >\n                Login\n                <Icon type=\"login\" style={{ marginLeft: \"3%\" }} />\n              </Button>\n            </Form.Item>\n          </form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/dashboard\"))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(loginComponent);\n","import React from \"react\";\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBNavLink,\n  MDBIcon,\n  MDBDropdown,\n  MDBDropdownItem,\n  MDBDropdownMenu,\n  MDBDropdownToggle\n} from \"mdbreact\";\nimport { BrowserRouter as Router, withRouter, Link } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport \"./navigationComponent.css\";\n\nclass navigationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false\n    };\n    this.onClick = this.onClick.bind(this);\n    this.onLogoutHandler = this.onLogoutHandler.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n  onLogoutHandler = () => {\n    this.props.onLogout();\n  };\n\n  render() {\n    const bgPink = { backgroundColor: \"#2BBBAD\" };\n    const container = { height: 1300 };\n    const { match } = this.props;\n    return (\n      <div style={{ backgroundColor: \"red\" }}>\n        <header>\n          <MDBNavbar style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n            <MDBNavbarBrand href=\"/\">\n              <strong>MbioTech</strong>\n              {/* <small>Embedded and IoT Platform</small> */}\n            </MDBNavbarBrand>\n            <MDBNavbarToggler onClick={this.onClick} />\n            <MDBCollapse isOpen={this.state.collapse} navbar>\n              <MDBNavbarNav left>\n                <MDBNavItem active={\"/dashboard\" === match.path}>\n                  <MDBNavLink to=\"/dashboard\">\n                    {\" \"}\n                    <MDBIcon icon=\"street-view\" />\n                    &nbsp;Dashboard\n                  </MDBNavLink>\n                </MDBNavItem>\n                {this.props.role === \"admin\" ? (\n                  <MDBNavItem active={\"/report\" === match.path}>\n                    <MDBNavLink to=\"report\">\n                      {\" \"}\n                      <MDBIcon icon=\"address-book\" />\n                      &nbsp;Report\n                    </MDBNavLink>\n                  </MDBNavItem>\n                ) : null}\n                {this.props.role === \"admin\" ? (\n                  <MDBNavItem active={\"/adduser\" === match.path}>\n                    <MDBNavLink to=\"adduser\">\n                      <MDBIcon icon=\"user-plus\" />\n                      &nbsp;Add User\n                    </MDBNavLink>\n                  </MDBNavItem>\n                ) : null}\n                {this.props.role === \"admin\" ? (\n                  <MDBNavItem active={\"/users\" === match.path}>\n                    <MDBNavLink to=\"users\">\n                      <MDBIcon icon=\"users\" />\n                      &nbsp;Users\n                    </MDBNavLink>\n                  </MDBNavItem>\n                ) : null}\n                {this.props.role === \"admin\" ? (\n                  <MDBNavItem active={\"/sitedetails\" === match.path}>\n                    <MDBNavLink to=\"sitedetails\">\n                      <MDBIcon icon=\"book\" />\n                      &nbsp;Site Details\n                    </MDBNavLink>\n                  </MDBNavItem>\n                ) : null}\n              </MDBNavbarNav>\n              <MDBNavbarNav right>\n                <MDBNavItem>\n                  <MDBDropdown>\n                    <MDBDropdownToggle nav caret>\n                      <MDBIcon icon=\"user\" />\n                    </MDBDropdownToggle>\n                    <MDBDropdownMenu className=\"dropdown-default\">\n                      <MDBDropdownItem onClick={this.onLogoutHandler}>\n                        Logout&nbsp;&nbsp;\n                        <MDBIcon icon=\"sign-out-alt\" />\n                      </MDBDropdownItem>\n                    </MDBDropdownMenu>\n                  </MDBDropdown>\n                </MDBNavItem>\n              </MDBNavbarNav>\n            </MDBCollapse>\n          </MDBNavbar>\n        </header>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    role: state.auth.role\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(action.logout())\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(navigationComponent));\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport { Layout } from \"antd\";\nconst { Footer } = Layout;\nclass footerComponent extends Component {\n  state = {};\n  render() {\n    return (\n      <Footer\n        style={{\n          backgroundColor: \"#2BBBAD\",\n          color: \"#FFF\",\n          textAlign: \"center\",\n          width: \"100%\"\n        }}\n      >\n        <p>Copyright ©2019 All rights reserved Embiot Technologies </p>\n      </Footer>\n    );\n  }\n}\n\nexport default footerComponent;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Input,\n  Button,\n  Icon,\n  Form,\n  Select,\n  message,\n  notification,\n  Checkbox\n} from \"antd\";\nimport \"./dashboardComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressBook, faMapPin } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"../../axiosInterceptor\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\nimport { MDBContainer, MDBNotification } from \"mdbreact\";\n\nconst { Option } = Select;\nconst { Header, Content } = Layout;\n\nconst formValid1 = ({ formErrors, ...rest }) => {\n  let valid = true;\n  console.log(\"rr--\", formErrors);\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  // Object.values(rest).forEach(val => {\n  //   val === null && (valid = false);\n  // });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\nconst nameRegx = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\n\n//^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\nclass dashboardComponent extends Component {\n  _isMounted = false;\n  state = {\n    username: null,\n    email: null,\n    phoneNo: null,\n    address: null,\n    pincode: null,\n    ctrname: \"\",\n    ctrno: \"\",\n    elname: \"\",\n    elno: \"\",\n    carpname: \"\",\n    carpno: \"\",\n    pantrname: \"\",\n    pantrno: \"\",\n    plumname: \"\",\n    plumno: \"\",\n    intname: \"\",\n    intno: \"\",\n    fabrname: \"\",\n    fabrino: \"\",\n\n    role: [],\n    checked: {\n      contractor: false,\n      electritian: false,\n      carpenter: false,\n      painter: false,\n      plumber: false,\n      interior: false,\n      fabricator: false\n    },\n    formError: {\n      username: \"\",\n      email: \"\",\n      phoneNo: \"\",\n      address: \"\",\n      pincode: \"\",\n      role: \"\",\n      ctrname: \"\",\n      ctrno: \"\",\n      elname: \"\",\n      elno: \"\",\n      carpname: \"\",\n      carpno: \"\",\n      pantrname: \"\",\n      pantrno: \"\",\n      plumname: \"\",\n      plumno: \"\",\n      intname: \"\",\n      intno: \"\",\n      fabrname: \"\",\n      fabrino: \"\"\n    }\n  };\n  componentDidMount() {\n    this._isMounted = true;\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"username\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.username = \"Please enter valid username\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.username = \"Min 3 character required\";\n        }\n        // } else if (value.length > 0 && !nameRegx.test(value.trim())) {\n        //   formErrors.username = \"Not valid name\";\n        // }\n        else {\n          formErrors.username = \"\";\n        }\n\n        break;\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"phoneNo\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.phoneNo = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.phoneNo = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.phoneNo = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.phoneNo = \"\";\n        }\n\n        break;\n      case \"address\":\n        formErrors.address =\n          value.trim() !== \"\" && value.length > 0 ? \"\" : \"please enter address\";\n        break;\n      case \"pincode\":\n        if (value.length < 6 && value.length > 0) {\n          formErrors.pincode = \"Min 6 character required\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.pincode = \"Pincode should be a number\";\n        } else if (value.length > 6 && value.length > 0) {\n          formErrors.pincode = \"Max 6 character allowed\";\n        } else {\n          formErrors.pincode = \"\";\n        }\n\n        break;\n      case \"ctrname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.ctrname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.ctrname = \"Min 3 character required\";\n        } else {\n          formErrors.ctrname = \"\";\n        }\n        break;\n      case \"ctrno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.ctrno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.ctrno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.ctrno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.ctrno = \"\";\n        }\n        break;\n\n      case \"elname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.elname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.elname = \"Min 3 character required\";\n        } else {\n          formErrors.elname = \"\";\n        }\n        break;\n      case \"elno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.elno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.elno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.elno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.elno = \"\";\n        }\n        break;\n\n      case \"carpname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.carpname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.carpname = \"Min 3 character required\";\n        } else {\n          formErrors.carpname = \"\";\n        }\n        break;\n      case \"carpno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.carpno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.carpno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.carpno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.carpno = \"\";\n        }\n        break;\n      case \"pantrname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.pantrname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.pantrname = \"Min 3 character required\";\n        } else {\n          formErrors.pantrname = \"\";\n        }\n        break;\n      case \"pantrno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.pantrno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.pantrno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.pantrno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.pantrno = \"\";\n        }\n        break;\n      case \"plumname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.plumname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.plumname = \"Min 3 character required\";\n        } else {\n          formErrors.plumname = \"\";\n        }\n        break;\n      case \"plumno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.plumno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.plumno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.plumno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.plumno = \"\";\n        }\n        break;\n      case \"intname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.intname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.intname = \"Min 3 character required\";\n        } else {\n          formErrors.intname = \"\";\n        }\n        break;\n      case \"intno\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.intno = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.intno = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.intno = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.intno = \"\";\n        }\n        break;\n      case \"fabrname\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.fabrname = \"Please enter valid name\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.fabrname = \"Min 3 character required\";\n        } else {\n          formErrors.fabrname = \"\";\n        }\n        break;\n      case \"fabrino\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.fabrino = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.fabrino = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.fabrino = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.fabrino = \"\";\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n  onvisitorButtonClickHandler = e => {\n    let {\n      email,\n      username,\n      phoneNo,\n      address,\n      pincode,\n      role,\n      formError\n    } = this.state;\n    if (email === null) {\n      formError.email = \"Email field required\";\n    }\n    if (username === null) {\n      formError.username = \"Username field required\";\n    }\n    if (phoneNo === null) {\n      formError.phoneNo = \"Phone no field required\";\n    }\n    if (address === null) {\n      formError.address = \"Address field required\";\n    }\n    if (pincode === null) {\n      formError.pincode = \"Pincode field required\";\n    }\n    if (role.length <= 0) {\n      formError.role = \"Role is required\";\n    }\n    this.setState({ formError: formError });\n  };\n\n  selectChangeHandle = value => {\n    //console.log(\"select value---\", value);\n\n    let formErrors = this.state.formError;\n    let name = \"role\";\n    switch (name) {\n      case \"role\":\n        formErrors.role = value.length <= 0 ? \"please select role \" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => {});\n  };\n  addvisitorSubmitHandler = e => {\n    e.preventDefault();\n    if (formValid1(this.state)) {\n      const userData = {\n        username: validator.escape(this.state.username),\n        email: validator.escape(this.state.email),\n        phoneNo: validator.escape(this.state.phoneNo),\n        address: validator.escape(this.state.address),\n        pincode: validator.escape(this.state.pincode),\n        role: this.state.role,\n        cname: validator.escape(this.state.ctrname),\n        cphone: validator.escape(this.state.ctrno),\n        elname: validator.escape(this.state.elname),\n        elno: validator.escape(this.state.elno),\n        carpname: validator.escape(this.state.carpname),\n        carpno: validator.escape(this.state.carpno),\n        pantrname: validator.escape(this.state.pantrname),\n        pantrno: validator.escape(this.state.pantrno),\n        plumname: validator.escape(this.state.plumname),\n        plumno: validator.escape(this.state.plumno),\n        intname: validator.escape(this.state.intname),\n        intno: validator.escape(this.state.intno),\n        fabrname: validator.escape(this.state.fabrname),\n        fabrino: validator.escape(this.state.fabrino),\n        executiveName: localStorage.getItem(\"username\")\n          ? validator.escape(localStorage.getItem(\"username\"))\n          : \"\"\n      };\n      axios\n        .post(\"/visitor\", { userData })\n        .then(response => {\n          if (response.status === 200) {\n            // console.log(response.data.message);\n            notification.open({\n              message: response.data.message,\n              duration: 2,\n              top: 80\n            });\n          } else {\n            notification.open({\n              message: response.data.message,\n              duration: 2,\n              top: 80\n            });\n          }\n        })\n        .catch(error => {\n          message.error(error);\n        });\n    }\n  };\n\n  onCheckboxChange2 = e => {\n    if (e.target.name === \"electritian\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.electritian = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.electritian = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onCheckboxChange1 = e => {\n    if (e.target.name === \"contractor\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.contractor = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.contractor = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onCheckboxChange3 = e => {\n    if (e.target.name === \"carpenter\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.carpenter = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.carpenter = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onCheckboxChange4 = e => {\n    if (e.target.name === \"painter\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.painter = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.painter = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n\n  onCheckboxChange5 = e => {\n    if (e.target.name === \"plumber\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.plumber = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.plumber = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onCheckboxChange6 = e => {\n    if (e.target.name === \"interior\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.interior = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.interior = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onCheckboxChange7 = e => {\n    if (e.target.name === \"fabricator\" && e.target.checked) {\n      let { checked } = this.state;\n      checked.fabricator = e.target.checked;\n      this.setState({ checked: checked });\n    } else {\n      let { checked } = this.state;\n      checked.fabricator = e.target.checked;\n      this.setState({ checked: checked });\n    }\n  };\n  onInputChange1 = e => {};\n\n  render() {\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let { formError } = this.state;\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <MDBContainer\n              className=\"text-center mt-5\"\n              style={{ backgroundColor: \"#FFF\", paddingBottom: \"5%\" }}\n            >\n              <Content>\n                <Row>\n                  <Col\n                    xs={{ span: 18, offset: 3 }}\n                    sm={{ span: 12, offset: 7 }}\n                    md={{ span: 10, offset: 7 }}\n                    //     className=\"card\"\n                  >\n                    <form\n                      className=\"form\"\n                      onSubmit={this.addvisitorSubmitHandler}\n                    >\n                      <h3 className=\"h3\">Site Visit Details</h3>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.username.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.username}\n                      >\n                        <Input\n                          required\n                          placeholder=\"Owner Name\"\n                          name=\"username\"\n                          prefix={\n                            <Icon\n                              type=\"user\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.email.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.email}\n                      >\n                        <Input\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          prefix={\n                            <Icon\n                              type=\"ie\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.phoneNo.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.phoneNo}\n                      >\n                        <Input\n                          placeholder=\"Phone number\"\n                          name=\"phoneNo\"\n                          prefix={\n                            <Icon\n                              type=\"phone\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.address.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.address}\n                      >\n                        <Input.TextArea\n                          placeholder=\"Address\"\n                          name=\"address\"\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.pincode.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.pincode}\n                      >\n                        <Input\n                          placeholder=\"Pincode\"\n                          name=\"pincode\"\n                          prefix={\n                            <FontAwesomeIcon\n                              icon={faMapPin}\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.role.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.role}\n                      >\n                        <Select\n                          //defaultValue={[\"select\"]}\n                          style={{ width: \"100%\" }}\n                          onChange={this.selectChangeHandle}\n                          showArrow={true}\n                          mode=\"multiple\"\n                          placeholder=\"Select Type of Site\"\n                        >\n                          <Option key=\"select\" value=\"select\" disabled>\n                            Select Type of Site\n                          </Option>\n                          <Option key=\"own\" value=\"own\">\n                            Own\n                          </Option>\n                          <Option key=\"rent\" value=\"rent\">\n                            Rent\n                          </Option>\n                          <Option key=\"hospital\" value=\"hospital\">\n                            Hospital\n                          </Option>\n                          <Option key=\"hotel\" value=\"hotel\">\n                            Hotel\n                          </Option>\n                          <Option key=\"restaurants\" value=\"restaurants\">\n                            Restaurants/Inn\n                          </Option>\n                          <Option key=\"apartment\" value=\"apartment\">\n                            Apartment\n                          </Option>\n                          <Option key=\"resort\" value=\"resorts\">\n                            Resorts\n                          </Option>\n                          <Option key=\"lodge\" value=\"lodge\">\n                            Lodge\n                          </Option>\n                          <Option key=\"choultry\" value=\"choultry\">\n                            Choultry\n                          </Option>\n                          <Option key=\"school\" value=\"school\">\n                            School\n                          </Option>\n                          <Option key=\"college\" value=\"college\">\n                            College\n                          </Option>\n                          <Option key=\"commercial\" value=\"commercial\">\n                            Commercial\n                          </Option>\n                          <Option key=\"residential\" value=\"residential\">\n                            Residential\n                          </Option>\n                        </Select>\n                      </Form.Item>\n\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"contractor\"\n                          onChange={this.onCheckboxChange1}\n                        >\n                          Contractor\n                        </Checkbox>\n                      </Form.Item>\n\n                      {this.state.checked.contractor ? (\n                        <div className=\"div1\">\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.ctrname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.ctrname}\n                            >\n                              <Input\n                                placeholder=\"Contractor Name\"\n                                name=\"ctrname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.ctrno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.ctrno}\n                            >\n                              <Input\n                                placeholder=\"Contractor Phoneno\"\n                                name=\"ctrno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"electritian\"\n                          onChange={this.onCheckboxChange2}\n                        >\n                          Electritian\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.electritian ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.elname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.elname}\n                            >\n                              <Input\n                                placeholder=\"Electritian Name\"\n                                name=\"elname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.elno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.elno}\n                            >\n                              <Input\n                                placeholder=\"Electritian Phoneno\"\n                                name=\"elno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"carpenter\"\n                          onChange={this.onCheckboxChange3}\n                        >\n                          Carpenter\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.carpenter ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.carpname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.carpname}\n                            >\n                              <Input\n                                placeholder=\"Carpentor Name\"\n                                name=\"carpname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.carpno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.carpno}\n                            >\n                              <Input\n                                placeholder=\"Carpenter Phoneno\"\n                                name=\"carpno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"painter\"\n                          onChange={this.onCheckboxChange4}\n                        >\n                          Painter\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.painter ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.pantrname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.pantrname}\n                            >\n                              <Input\n                                placeholder=\"Painter Name\"\n                                name=\"pantrname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.pantrno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.pantrno}\n                            >\n                              <Input\n                                placeholder=\"Painter Phoneno\"\n                                name=\"pantrno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"plumber\"\n                          onChange={this.onCheckboxChange5}\n                        >\n                          Plumber\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.plumber ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.plumname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.plumname}\n                            >\n                              <Input\n                                placeholder=\"Plumber Name\"\n                                name=\"plumname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.plumno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.plumno}\n                            >\n                              <Input\n                                placeholder=\"Plumber Phoneno\"\n                                name=\"plumno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"interior\"\n                          onChange={this.onCheckboxChange6}\n                        >\n                          Interior Designer\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.interior ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.intname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.intname}\n                            >\n                              <Input\n                                placeholder=\"Interior Name\"\n                                name=\"intname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.intno.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.intno}\n                            >\n                              <Input\n                                placeholder=\"Interior Phoneno\"\n                                name=\"intno\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"checkboxElement\">\n                        <Checkbox\n                          className=\"check\"\n                          name=\"fabricator\"\n                          onChange={this.onCheckboxChange7}\n                        >\n                          Fabricator\n                        </Checkbox>\n                      </Form.Item>\n                      {this.state.checked.fabricator ? (\n                        <div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.fabrname.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.fabrname}\n                            >\n                              <Input\n                                placeholder=\"Fabricator Name\"\n                                name=\"fabrname\"\n                                prefix={\n                                  <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                          <div>\n                            <Form.Item\n                              className=\"checkSub\"\n                              hasFeedback\n                              validateStatus={\n                                formError.fabrino.length > 0 ? \"error\" : \"\"\n                              }\n                              help={formError.fabrino}\n                            >\n                              <Input\n                                placeholder=\"Fabricator Phoneno\"\n                                name=\"fabrino\"\n                                prefix={\n                                  <Icon\n                                    type=\"phone\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                  />\n                                }\n                                onChange={event => this.onInputChange(event)}\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      ) : null}\n                      <Form.Item className=\"formElement\">\n                        <Button\n                          onClick={this.onvisitorButtonClickHandler}\n                          htmlType=\"submit\"\n                          block\n                          style={{\n                            backgroundColor: \"#2BBBAD\",\n                            color: \"#FFF\",\n                            fontSize: \"18px\"\n                          }}\n                        >\n                          Add Visitors\n                          <Icon type=\"user-add\" style={{ marginLeft: \"3%\" }} />\n                        </Button>\n                      </Form.Item>\n                    </form>\n                  </Col>\n                </Row>\n              </Content>\n            </MDBContainer>\n\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/dashboard\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(dashboardComponent);\n","import React, { Component } from \"react\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Icon,\n  Menu,\n  Input,\n  Select,\n  Checkbox,\n  Table,\n  Divider,\n  Tag,\n  Pagination,\n  Button,\n  notification\n} from \"antd\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport \"./reportComponent.css\";\nimport axios from \"../../axiosInterceptor\";\nimport { saveAs } from \"file-saver\";\nimport { MDBContainer, MDBBtn } from \"mdbreact\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\n\nconst { Content } = Layout;\n\nclass reportComponent extends Component {\n  _isMounted = false;\n  state = {\n    selectedRows: [],\n    tableData: []\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    axios\n      .get(\"/visitorData\")\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ tableData: res.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(\"er--\", error);\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onExportReport = () => {\n    axios\n      .get(\"/exportData\", { responseType: \"blob\" })\n      .then(res => {\n        saveAs(res.data, \"MbiotechVisitors.xlsx\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  deleteRow = text => {\n    let tableId = text._id;\n    axios\n      .put(\"/visitorDelete\", { id: tableId })\n      .then(res => {\n        console.log(\"res--\", res);\n        if (res.data.success) {\n          notification.open({\n            message: res.data.message,\n            duration: 2,\n            top: 80\n          });\n          axios\n            .get(\"/visitorData\")\n            .then(res => {\n              if (res.data.success) {\n                this.setState({ tableData: res.data.data });\n              }\n            })\n            .catch(error => {\n              console.log(\"er-last-\", error);\n            });\n        }\n      })\n      .catch(err => {\n        console.log(\"err---\", err);\n      });\n  };\n  render() {\n    const columns = [\n      {\n        title: \"Executive Name\",\n        dataIndex: \"executiveName\",\n        key: \"executiveName\",\n        fixed: \"left\",\n        width: 120\n      },\n      {\n        title: \"Name\",\n        dataIndex: \"fullname\",\n        key: \"fullname\",\n        fixed: \"left\",\n        width: 100\n        //  render: text => <a>{text}</a>\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"age\",\n        width: 100\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        key: \"address\",\n        width: 100\n      },\n      {\n        title: \"Phone\",\n        dataIndex: \"phoneNo\",\n        key: \"phoneNo\",\n        width: 100\n      },\n      {\n        title: \"Place type\",\n        dataIndex: \"typeOfPlace\",\n        key: \"typeOfPlace\",\n        width: 150\n      },\n      {\n        title: \"ContrName\",\n        dataIndex: \"contractorName\",\n        key: \"contractorName\",\n        width: 110\n      },\n      {\n        title: \"ContrNo\",\n        dataIndex: \"contractorPhoneNo\",\n        key: \"contractorPhoneNo\",\n        width: 100\n      },\n\n      {\n        title: \"ElectricianName\",\n        dataIndex: \"electricianName\",\n        key: \"electricianName\",\n        width: 150\n      },\n      {\n        title: \"ElectricianNo\",\n        dataIndex: \"electricianNo\",\n        key: \"electricianNo\",\n        width: 150\n      },\n      {\n        title: \"CarpenterName\",\n        dataIndex: \"CarpenterName\",\n        key: \"CarpenterName\",\n        width: 150\n      },\n      {\n        title: \"CarpenterNo\",\n        dataIndex: \"CarpenterNo\",\n        key: \"CarpenterNo\",\n        width: 150\n      },\n      {\n        title: \"PainterName\",\n        dataIndex: \"PainterName\",\n        key: \"PainterName\",\n        width: 150\n      },\n      {\n        title: \"PainterNo\",\n        dataIndex: \"PainterNo\",\n        key: \"PainterNo\",\n        width: 150\n      },\n      {\n        title: \"PlumberName\",\n        dataIndex: \"PlumberName\",\n        key: \"PlumberName\",\n        width: 150\n      },\n      {\n        title: \"PlumberNo\",\n        dataIndex: \"PlumberNo\",\n        key: \"PlumberNo\",\n        width: 150\n      },\n      {\n        title: \"InteriorName\",\n        dataIndex: \"InteriorName\",\n        key: \"InteriorName\",\n        width: 150\n      },\n      {\n        title: \"InteriorNo\",\n        dataIndex: \"InteriorNo\",\n        key: \"InteriorNo\",\n        width: 150\n      },\n      {\n        title: \"FabricatorName\",\n        dataIndex: \"FabricatorName\",\n        key: \"FabricatorName\",\n        width: 150\n      },\n      {\n        title: \"FabricatorNo\",\n        dataIndex: \"FabricatorNo\",\n        key: \"FabricatorNo\",\n        width: 150\n      },\n\n      {\n        title: \"Latitude\",\n        dataIndex: \"latitude\",\n        key: \"latitude\",\n        width: 100\n      },\n      {\n        title: \"longitude\",\n        dataIndex: \"longitude\",\n        key: \"longitude\",\n        width: 100\n      },\n      {\n        title: \"City\",\n        dataIndex: \"city\",\n        key: \"city\",\n        width: 100\n      },\n      {\n        title: \"Timestamp\",\n        dataIndex: \"timestamp\",\n        key: \"timestamp\",\n        width: 120\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        fixed: \"right\",\n        width: 100,\n        render: (text, record) => (\n          <span>\n            <Button type=\"link\" onClick={() => this.deleteRow(text)}>\n              <Icon type=\"delete\" style={{ color: \"red\" }} />\n            </Button>\n          </span>\n        )\n      }\n    ];\n\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <MDBContainer\n              className=\"text-center mt-5\"\n              style={{\n                backgroundColor: \"#FFF\",\n                paddingBottom: \"5%\",\n                height: \"100vh\"\n              }}\n            >\n              <Button\n                type=\"primary\"\n                ghost\n                htmlType=\"button\"\n                style={{\n                  marginTop: \"4%\",\n                  float: \"left\",\n                  marginLeft: \"5%\",\n                  color: \"#2BBBAD\",\n                  borderColor: \"#2BBBAD\",\n                  width: 120\n                }}\n                onClick={this.onExportReport}\n              >\n                Export\n              </Button>\n              <Content style={{ backgroundColor: \"#FFF\", marginTop: \"7%\" }}>\n                <Row>\n                  <Col\n                    xs={{ span: 23, offset: 3 }}\n                    sm={{ span: 12, offset: 3 }}\n                    md={{ span: 24, offset: 1 }}\n                  >\n                    {/* \n                    <MDBBtn\n                      style={{ cursor: \"pointer\" }}\n                      onClick={this.onExportReport}\n                    >\n                      Export\n                    </MDBBtn> */}\n                    <div style={{ marginTop: \"2%\", marginRight: \"2%\" }}>\n                      <Table\n                        scroll={{ x: 1300, y: 350 }}\n                        rowKey={record => record.email}\n                        columns={columns}\n                        dataSource={this.state.tableData}\n                        pagination\n                        bordered\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </Content>\n            </MDBContainer>\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  };\n};\n\nexport default connect(mapStateToProps)(reportComponent);\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Input,\n  Button,\n  Icon,\n  Form,\n  Select,\n  notification\n} from \"antd\";\nimport \"./adduserComponent.css\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as action from \"../../stores/actions/index\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressBook, faMapPin } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"../../axiosInterceptor\";\nimport { MDBContainer } from \"mdbreact\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\nconst { Option } = Select;\nconst { Header, Content } = Layout;\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\nconst emailRegx = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\nconst passwordReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\nconst nameRegx = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/g;\nclass adduserComponent extends Component {\n  state = {\n    username: null,\n    email: null,\n    password: null,\n    phoneNo: null,\n    address: null,\n    pincode: null,\n    role: \"select\",\n    formError: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      phoneNo: \"\",\n      address: \"\",\n      pincode: \"\",\n      role: \"\"\n    }\n  };\n\n  onInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formError;\n\n    switch (name) {\n      case \"username\":\n        if (value.length > 0 && !nameRegx.test(value.trim())) {\n          formErrors.username = \"Please enter valid username\";\n        } else if (value.length < 3 && value.length > 0) {\n          formErrors.username = \"Min 3 character required\";\n        } else {\n          formErrors.username = \"\";\n        }\n        break;\n      case \"email\":\n        formErrors.email =\n          emailRegx.test(value) && value.length > 0 ? \"\" : \"Enter valid email\";\n        break;\n      case \"password\":\n        if (!passwordReg.test(value) && value.length > 0) {\n          formErrors.password =\n            \"Password should contains atleast 1 lowercase ,1 uppercase,1 numeric ,1 special character and length must be 8\";\n        } else {\n          formErrors.password = \"\";\n        }\n\n        break;\n      case \"phoneNo\":\n        if (value.length < 10 && value.length > 0) {\n          formErrors.phoneNo = \"Enter valid phone number\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.phoneNo = \"Phone number should be a number\";\n        } else if (value.length > 10) {\n          formErrors.phoneNo = \"Phone number should be 10 digit\";\n        } else {\n          formErrors.phoneNo = \"\";\n        }\n\n        break;\n      case \"address\":\n        formErrors.address =\n          value.trim() !== \"\" && value.length > 0 ? \"\" : \"please enter address\";\n        break;\n      case \"pincode\":\n        if (value.length < 6 && value.length > 0) {\n          formErrors.pincode = \"Min 6 character required\";\n        } else if (value.length > 0 && !validator.isInt(value.trim())) {\n          formErrors.pincode = \"Pincode should be a number\";\n        } else if (value.length > 6 && value.length > 0) {\n          formErrors.pincode = \"Max 6 character allowed\";\n        } else {\n          formErrors.pincode = \"\";\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => {\n      //console.log(this.state);\n    });\n  };\n\n  onButtonClickHandler = e => {\n    let {\n      email,\n      password,\n      username,\n      phoneNo,\n      address,\n      pincode,\n      role,\n      formError\n    } = this.state;\n    if (email === null) {\n      formError.email = \"Email field required\";\n    }\n    if (password === null) {\n      formError.password = \"Password field required\";\n    }\n    if (username === null) {\n      formError.username = \"Username field required\";\n    }\n    if (phoneNo === null) {\n      formError.phoneNo = \"Phone no field required\";\n    }\n    if (address === null) {\n      formError.address = \"Address field required\";\n    }\n    if (pincode === null) {\n      formError.pincode = \"Pincode field required\";\n    }\n    if (role === \"select\") {\n      formError.role = \"Role is required\";\n    }\n    this.setState({ formError });\n  };\n  selectChangeHandle = value => {\n    let formErrors = this.state.formError;\n    let name = \"role\";\n    switch (name) {\n      case \"role\":\n        formErrors.role =\n          value.trim() === \"select\" ? \"please select role \" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => {});\n  };\n  adduserSubmitHandler = e => {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      const userData = {\n        username: validator.escape(this.state.username.trim()),\n        email: validator.escape(this.state.email.trim()),\n        password: validator.escape(this.state.password.trim()),\n        phoneNo: validator.escape(this.state.phoneNo.trim()),\n        address: validator.escape(this.state.address.trim()),\n        pincode: validator.escape(this.state.pincode.trim()),\n        role: validator.escape(this.state.role.trim())\n      };\n      axios\n        .post(\"/signup\", { userData })\n        .then(response => {\n          if (response.data.success) {\n            notification.open({\n              message: response.data.message,\n              duration: 2,\n              top: 80\n            });\n          } else {\n            notification.open({\n              message: response.data.message,\n              duration: 2,\n              top: 80\n            });\n          }\n        })\n        .catch(error => {\n          console.log(\"err---\", error);\n          notification.open({\n            message: error.message,\n            duration: 2,\n            top: 80\n          });\n        });\n    }\n  };\n  render() {\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    let { formError } = this.state;\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <MDBContainer\n              className=\"text-center mt-5\"\n              style={{ backgroundColor: \"#FFF\", paddingBottom: \"5%\" }}\n            >\n              <Content style={{ backgroundColor: \"#FFF\" }}>\n                <Row>\n                  <Col\n                    xs={{ span: 18, offset: 3 }}\n                    sm={{ span: 12, offset: 7 }}\n                    md={{ span: 10, offset: 7 }}\n                    // className=\"card\"\n                  >\n                    <form className=\"form\" onSubmit={this.adduserSubmitHandler}>\n                      <h3 className=\"h3\">Add New Site Executive </h3>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.username.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.username}\n                      >\n                        <Input\n                          placeholder=\"Full name\"\n                          name=\"username\"\n                          prefix={\n                            <Icon\n                              type=\"user\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.email.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.email}\n                      >\n                        <Input\n                          placeholder=\"email\"\n                          name=\"email\"\n                          prefix={\n                            <Icon\n                              type=\"ie\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.password.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.password}\n                      >\n                        <Input\n                          required\n                          placeholder=\"password\"\n                          name=\"password\"\n                          prefix={\n                            <Icon\n                              type=\"lock\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.phoneNo.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.phoneNo}\n                      >\n                        <Input\n                          placeholder=\"Phone number\"\n                          name=\"phoneNo\"\n                          prefix={\n                            <Icon\n                              type=\"phone\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.address.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.address}\n                      >\n                        <Input.TextArea\n                          placeholder=\"Address\"\n                          name=\"address\"\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.pincode.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.pincode}\n                      >\n                        <Input\n                          placeholder=\"Pincode\"\n                          name=\"pincode\"\n                          prefix={\n                            <FontAwesomeIcon\n                              icon={faMapPin}\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          onChange={event => this.onInputChange(event)}\n                        />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"formElement\"\n                        hasFeedback\n                        validateStatus={\n                          formError.role.length > 0 ? \"error\" : \"\"\n                        }\n                        help={formError.role}\n                      >\n                        <Select\n                          defaultValue=\"select\"\n                          style={{ width: \"100%\" }}\n                          onChange={this.selectChangeHandle}\n                          showArrow={true}\n                        >\n                          <Option key=\"select\" value=\"select\" disabled>\n                            Select Role\n                          </Option>\n                          <Option key=\"admin\" value=\"admin\">\n                            Admin\n                          </Option>\n                          <Option key=\"executive\" value=\"executive\">\n                            Executive\n                          </Option>\n                        </Select>\n                      </Form.Item>\n                      <Form.Item className=\"formElement\">\n                        <Button\n                          onClick={this.onButtonClickHandler}\n                          htmlType=\"submit\"\n                          block\n                          style={{\n                            backgroundColor: \"#2BBBAD\",\n                            color: \"#FFF\",\n                            fontSize: \"18px\"\n                          }}\n                        >\n                          Add User\n                          <Icon type=\"user-add\" style={{ marginLeft: \"3%\" }} />\n                        </Button>\n                      </Form.Item>\n                    </form>\n                  </Col>\n                </Row>\n              </Content>\n            </MDBContainer>\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    isError: state.auth.error,\n    isLoading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: userData => dispatch(action.loginAction(userData)),\n    onSetAuthRedirectPath: () =>\n      dispatch(action.setAuthRedirectPath(\"/adduser\"))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(adduserComponent);\n","import React, { Component } from \"react\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Icon,\n  Menu,\n  Input,\n  Select,\n  Checkbox,\n  Table,\n  Divider,\n  Tag,\n  Pagination,\n  Button,\n  notification\n} from \"antd\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport \"./usersComponent.css\";\nimport axios from \"../../axiosInterceptor\";\nimport { saveAs } from \"file-saver\";\nimport { MDBContainer, MDBBtn } from \"mdbreact\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\n\nconst { Content } = Layout;\n\nclass usersComponent extends Component {\n  _isMounted = false;\n  state = {\n    selectedRows: [],\n    tableData: []\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    axios\n      .get(\"/users\")\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ tableData: res.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(\"er--\", error);\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onExportReport = () => {\n    axios\n      .get(\"/exportUserData\", { responseType: \"blob\" })\n      .then(res => {\n        saveAs(res.data, \"MbiotechUsers.xlsx\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  deleteRow = text => {\n    let userId = text._id;\n    axios\n      .put(\"/userDelete\", { id: userId })\n      .then(res => {\n        console.log(\"res--\", res);\n        if (res.data.success) {\n          notification.open({\n            message: res.data.message,\n            duration: 5,\n            top: 80\n          });\n          axios\n            .get(\"/users\")\n            .then(res => {\n              if (res.data.success) {\n                this.setState({ tableData: res.data.data });\n              }\n            })\n            .catch(error => {\n              console.log(\"er-last-\", error);\n            });\n        }\n      })\n      .catch(err => {\n        console.log(\"err---\", err);\n      });\n  };\n  render() {\n    const columns = [\n      {\n        title: \"Full Name\",\n        dataIndex: \"username\",\n        key: \"username\",\n        // fixed: \"left\",\n        width: 150\n        //  render: text => <a>{text}</a>\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"email\",\n        // fixed: \"left\",\n        width: 150\n      },\n      {\n        title: \"Phoneno\",\n        dataIndex: \"phoneNo\",\n        key: \"phoneNo\",\n        width: 100\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        key: \"address\",\n        width: 210\n      },\n      {\n        title: \"Pincode\",\n        dataIndex: \"pincode\",\n        key: \"pincode\",\n        width: 100\n      },\n      {\n        title: \"Role\",\n        dataIndex: \"role\",\n        key: \"role\",\n        width: 100\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        fixed: \"right\",\n        width: 100,\n        render: (text, record) => (\n          <span>\n            <Button type=\"link\" onClick={() => this.deleteRow(text)}>\n              <Icon type=\"delete\" style={{ color: \"red\" }} />\n            </Button>\n          </span>\n        )\n      }\n    ];\n\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <MDBContainer className=\"text-center mt-5 containers\">\n              <Button\n                type=\"primary\"\n                ghost\n                htmlType=\"button\"\n                style={{\n                  marginTop: \"4%\",\n                  float: \"left\",\n                  marginLeft: \"5%\",\n                  color: \"#2BBBAD\",\n                  borderColor: \"#2BBBAD\",\n                  width: 120\n                }}\n                onClick={this.onExportReport}\n              >\n                Export\n              </Button>\n              <Content style={{ backgroundColor: \"#FFF\", marginTop: \"7%\" }}>\n                <Row>\n                  <Col\n                    xs={{ span: 23, offset: 3 }}\n                    sm={{ span: 12, offset: 2 }}\n                    md={{ span: 24, offset: 1 }}\n                  >\n                    <div style={{ marginTop: \"2%\", marginRight: \"2%\" }}>\n                      <Table\n                        scroll={{ x: 1300, y: 350 }}\n                        rowKey={record => record.email}\n                        columns={columns}\n                        dataSource={this.state.tableData}\n                        pagination\n                        bordered\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </Content>\n            </MDBContainer>\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  };\n};\n\nexport default connect(mapStateToProps)(usersComponent);\n","import React, { Component } from \"react\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Icon,\n  Menu,\n  Input,\n  Select,\n  Checkbox,\n  Table,\n  Divider,\n  Tag,\n  Pagination,\n  Button,\n  notification,\n  DatePicker\n} from \"antd\";\nimport * as action from \"../../stores/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NavigationComponent from \"../navigationComponent/navigationComponent\";\nimport \"./siteDetailsComponent.css\";\nimport axios from \"../../axiosInterceptor\";\nimport { saveAs } from \"file-saver\";\nimport { MDBContainer, MDBBtn } from \"mdbreact\";\nimport FooterComponent from \"../footerComponent/footerComponent\";\nimport validator from \"validator\";\n\nconst { Content } = Layout;\nconst { RangePicker } = DatePicker;\nconst dateFormatList = [\"YYYY-MM-DD\", \"YYYY-MM-DD\"];\n\nclass siteDetailsComponent extends Component {\n  _isMounted = false;\n  state = {\n    selectedRows: [],\n    tableData: [],\n    userData: [],\n    filterData: {\n      username: \"\",\n      fromDate: \"\",\n      toDate: \"\"\n    }\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    axios\n      .get(\"/visitorData\")\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ tableData: res.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(\"er--\", error);\n      });\n    axios\n      .get(\"/users\")\n      .then(res => {\n        if (res.data.success) {\n          console.log(\"res--\", res.data.data);\n          this.setState({ userData: res.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(\"er--\", error);\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onExportReport = () => {\n    let { filterData } = this.state;\n\n    if (\n      filterData.username !== \"\" &&\n      filterData.fromDate !== \"\" &&\n      filterData.toDate !== \"\"\n    ) {\n      axios\n        .post(\n          \"/exportSiteDetails\",\n          { filterData: this.state.filterData },\n          { responseType: \"blob\" }\n        )\n        .then(res => {\n          saveAs(res.data, \"MbiotechVisitors.xlsx\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      axios\n        .get(\"/exportData\", { responseType: \"blob\" })\n        .then(res => {\n          saveAs(res.data, \"MbiotechVisitors.xlsx\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n  deleteRow = text => {\n    let tableId = text._id;\n    axios\n      .put(\"/visitorDelete\", { id: tableId })\n      .then(res => {\n        console.log(\"res--\", res);\n        if (res.data.success) {\n          notification.open({\n            message: res.data.message,\n            duration: 2,\n            top: 80\n          });\n          axios\n            .get(\"/visitorData\")\n            .then(res => {\n              if (res.data.success) {\n                this.setState({ tableData: res.data.data });\n              } else {\n                notification.open({\n                  message: res.data.message,\n                  duration: 2,\n                  top: 80\n                });\n              }\n            })\n            .catch(error => {\n              console.log(\"er-last-\", error);\n            });\n        }\n      })\n      .catch(err => {\n        console.log(\"err---\", err);\n      });\n  };\n\n  onSelectChange = value => {\n    console.log(\"value\", value);\n    let { filterData } = this.state;\n    filterData.username = validator.escape(value);\n    this.setState({ filterData: filterData });\n  };\n  onDateChange = (date, dateString) => {\n    // console.log(dateString[0], \"\\n\", dateString[1]);\n    let { filterData } = this.state;\n    filterData.fromDate = validator.escape(dateString[0]);\n    filterData.toDate = validator.escape(dateString[1]);\n    this.setState({ filterData: filterData });\n  };\n  onFilterTable = e => {\n    e.preventDefault();\n    let { filterData } = this.state;\n    if (\n      filterData.username === \"\" ||\n      filterData.fromDate === \"\" ||\n      filterData.toDate === \"\"\n    ) {\n      notification.open({\n        message: \"Please fill the filter data\",\n        duration: 2,\n        top: 80\n      });\n    } else {\n      axios\n        .post(\"/filterData\", { filterData: this.state.filterData })\n        .then(res => {\n          if (res.data.success) {\n            this.setState({ tableData: res.data.data });\n          } else {\n            notification.open({\n              message: res.data.message,\n              duration: 2,\n              top: 80\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"fil err--\", err);\n        });\n    }\n  };\n  render() {\n    const columns = [\n      {\n        title: \"Executive Name\",\n        dataIndex: \"executiveName\",\n        key: \"executiveName\",\n        fixed: \"left\",\n        width: 120\n      },\n      {\n        title: \"Name\",\n        dataIndex: \"fullname\",\n        key: \"fullname\",\n        fixed: \"left\",\n        width: 100\n        //  render: text => <a>{text}</a>\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"age\",\n        width: 100\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        key: \"address\",\n        width: 100\n      },\n      {\n        title: \"Phone\",\n        dataIndex: \"phoneNo\",\n        key: \"phoneNo\",\n        width: 100\n      },\n      {\n        title: \"Place type\",\n        dataIndex: \"typeOfPlace\",\n        key: \"typeOfPlace\",\n        width: 150\n      },\n      {\n        title: \"ContrName\",\n        dataIndex: \"contractorName\",\n        key: \"contractorName\",\n        width: 110\n      },\n      {\n        title: \"ContrNo\",\n        dataIndex: \"contractorPhoneNo\",\n        key: \"contractorPhoneNo\",\n        width: 100\n      },\n\n      {\n        title: \"ElectricianName\",\n        dataIndex: \"electricianName\",\n        key: \"electricianName\",\n        width: 150\n      },\n      {\n        title: \"ElectricianNo\",\n        dataIndex: \"electricianNo\",\n        key: \"electricianNo\",\n        width: 150\n      },\n      {\n        title: \"CarpenterName\",\n        dataIndex: \"CarpenterName\",\n        key: \"CarpenterName\",\n        width: 150\n      },\n      {\n        title: \"CarpenterNo\",\n        dataIndex: \"CarpenterNo\",\n        key: \"CarpenterNo\",\n        width: 150\n      },\n      {\n        title: \"PainterName\",\n        dataIndex: \"PainterName\",\n        key: \"PainterName\",\n        width: 150\n      },\n      {\n        title: \"PainterNo\",\n        dataIndex: \"PainterNo\",\n        key: \"PainterNo\",\n        width: 150\n      },\n      {\n        title: \"PlumberName\",\n        dataIndex: \"PlumberName\",\n        key: \"PlumberName\",\n        width: 150\n      },\n      {\n        title: \"PlumberNo\",\n        dataIndex: \"PlumberNo\",\n        key: \"PlumberNo\",\n        width: 150\n      },\n      {\n        title: \"InteriorName\",\n        dataIndex: \"InteriorName\",\n        key: \"InteriorName\",\n        width: 150\n      },\n      {\n        title: \"InteriorNo\",\n        dataIndex: \"InteriorNo\",\n        key: \"InteriorNo\",\n        width: 150\n      },\n      {\n        title: \"FabricatorName\",\n        dataIndex: \"FabricatorName\",\n        key: \"FabricatorName\",\n        width: 150\n      },\n      {\n        title: \"FabricatorNo\",\n        dataIndex: \"FabricatorNo\",\n        key: \"FabricatorNo\",\n        width: 150\n      },\n\n      {\n        title: \"Latitude\",\n        dataIndex: \"latitude\",\n        key: \"latitude\",\n        width: 100\n      },\n      {\n        title: \"longitude\",\n        dataIndex: \"longitude\",\n        key: \"longitude\",\n        width: 100\n      },\n      {\n        title: \"City\",\n        dataIndex: \"city\",\n        key: \"city\",\n        width: 100\n      },\n      {\n        title: \"Timestamp\",\n        dataIndex: \"timestamp\",\n        key: \"timestamp\",\n        width: 120\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        fixed: \"right\",\n        width: 100,\n        render: (text, record) => (\n          <span>\n            <Button type=\"link\" onClick={() => this.deleteRow(text)}>\n              <Icon type=\"delete\" style={{ color: \"red\" }} />\n            </Button>\n          </span>\n        )\n      }\n    ];\n\n    if (!this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Layout>\n            <NavigationComponent />\n            <MDBContainer className=\"text-center mt-5 containers\">\n              <Button\n                type=\"primary\"\n                ghost\n                htmlType=\"button\"\n                style={{\n                  marginTop: \"4%\",\n                  float: \"left\",\n                  marginLeft: \"5%\",\n                  color: \"#2BBBAD\",\n                  borderColor: \"#2BBBAD\",\n                  width: 120\n                }}\n                onClick={this.onExportReport}\n              >\n                Export\n              </Button>\n              <Content style={{ backgroundColor: \"#FFF\", marginTop: \"13%\" }}>\n                <Row>\n                  <Col\n                    xs={{ span: 23, offset: 3 }}\n                    sm={{ span: 12, offset: 3 }}\n                    md={{ span: 24, offset: 1 }}\n                  >\n                    <div>\n                      <Select\n                        placeholder=\"Select User\"\n                        style={{\n                          width: 120,\n                          marginRight: \"2%\"\n                        }}\n                        onChange={this.onSelectChange}\n                      >\n                        {this.state.userData.map(user => (\n                          <Select.Option key={user._id} value={user.username}>\n                            {user.username}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                      <RangePicker\n                        style={{\n                          marginRight: \"2%\"\n                        }}\n                        onChange={this.onDateChange}\n                        format={dateFormatList[0]}\n                      />\n                      <Button\n                        type=\"primary\"\n                        ghost\n                        htmlType=\"button\"\n                        style={{\n                          color: \"#2BBBAD\",\n                          borderColor: \"#2BBBAD\",\n                          width: 120\n                        }}\n                        onClick={this.onFilterTable}\n                      >\n                        Search\n                      </Button>\n                    </div>\n                    <div style={{ marginTop: \"4%\", marginRight: \"2%\" }}>\n                      <Table\n                        scroll={{ x: 1300, y: 350 }}\n                        rowKey={record => record.email}\n                        columns={columns}\n                        dataSource={this.state.tableData}\n                        pagination\n                        bordered\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </Content>\n            </MDBContainer>\n            <Row>\n              <Col>\n                <FooterComponent />\n              </Col>\n            </Row>\n          </Layout>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  };\n};\n\nexport default connect(mapStateToProps)(siteDetailsComponent);\n","import React, { Component } from \"react\";\nimport Aux from \"./hoc/Aux\";\nimport loginComponent from \"./components/loginComponent/loginComponent\";\nimport dashboardComponent from \"./components/dashboardComponent/dashboardComponent\";\nimport { withRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./stores/actions/index\";\nimport reportComponent from \"./components/reportComponent/reportComponent\";\nimport adduserComponent from \"./components/adduserComponent/adduserComponent\";\nimport usersComponent from \"./components/usersComponent/usersComponent\";\nimport siteDetailsComponent from \"./components/siteDetails/siteDetailsComponent\";\n\nclass App extends Component {\n  _isMounted = false;\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.onTryAutoSignUp();\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={loginComponent} />\n        <Route path=\"/dashboard\" component={dashboardComponent} />\n        <Route path=\"/adduser\" component={adduserComponent} />\n        <Route path=\"/report\" component={reportComponent} />\n        <Route path=\"/users\" component={usersComponent} />\n        <Route path=\"/sitedetails\" component={siteDetailsComponent} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null //state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, newObject) => {\n  return {\n    ...oldObject,\n    ...newObject\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../updateObject\";\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false,\n  role: null,\n  authRedirectPath: \"/\"\n};\n\nconst loginRequest = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\nconst loginSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    token: action.token,\n    role: action.role,\n    username: action.username\n  });\n};\n\nconst loginFailure = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst logout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n    role: null,\n    authRedirectPath: \"/\"\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_REQUEST:\n      return loginRequest(state, action);\n    case actionTypes.LOGIN_SUCCESS:\n      return loginSuccess(state, action);\n    case actionTypes.LOGIN_FAILURE:\n      return loginFailure(state, action);\n    case actionTypes.LOGOUT:\n      return logout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\nexport default loginReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport loginReducer from \"./stores/reducers/loginReducer\";\n\nconst rootReducer = combineReducers({\n  auth: loginReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}